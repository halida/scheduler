%tr
  %td
    = link_to "##{item.id}", item
    .pull-right= render_enabled(item.enabled)
  %td
    .p
      %strong= item.title
      - if item.application_id
        .p= link_to item.application.name, item.application
    .p= simple_format item.description
  %td
    - em = item.execution_method
    .pull-right{title: "Execution Type"}
      = em.execution_type
    .p
      %strong= link_to em.title, em
    = render partial: "execution_methods/detail", locals: {em: em}

    - if item.parameters.present?
      .p= link_to "Plan Parameters", "#parameters-#{item.id}", class: "toggle-popup"
      .hide
        .popup{id: "parameters-#{item.id}"}
          = hash_as_table item.parameters
    - if item.token.present?
      = link_to "API Token", "#plan-#{item.id}-token", class: 'toggle-popup', style: "margin-right: 10px"
      .hide
        .popup{id: "plan-#{item.id}-token"}
          %pre= item.token

    .muted
      Waiting for #{item.waiting} seconds
  %td
    %ul.list-unstyled
      - item.routines.each do |routine|
        %li
          = render_enabled(routine.enabled)
          = routine.timezone
          %span{title: routine.config}
            = link_to [:edit, routine] do
              = Scheduler::Lib.schedule_description(routine.config)
              - if routine.modify != 0
                #{routine.modify} seconds
          .pull-right
            = link_to routine, method: :delete, data: {confirm: "Are you sure to delete this?"} do
              %span.glyphicon.glyphicon-trash.muted
      %li
        = link_to [:new, :routine, {item: {plan_id: item.id}}], title: "New Routine" do
          %span.glyphicon.glyphicon-plus

  %td
    .btn-group.pull-right{:role => "group"}
      %button.btn.btn-default.btn-xs.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :type => "button"}
        %span.caret
      %ul.dropdown-menu
        - [:execute, :expand, :assign_token, :delete_future_executions].each do |name|
          %li= link_to name.to_s.humanize, [:op, item, type: name], method: :post, data: {confirm: "Are you sure to #{name.to_s.humanize}?"}
        %li.divider{:role => "separator"}
        %li= link_to "Edit", [:edit, item]
        %li= link_to "Delete", item, method: :delete, data: {confirm: "Are you sure to delete ##{item.title}?"}
