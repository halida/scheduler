%tr
  %td= link_to "##{item.id}", item
  %td
    .p= link_to item.plan.title, item.plan
    - if item.routine
      .muted= Scheduler::Lib.schedule_description(item.routine.config)
  %td= format_time item.scheduled_at
  %td
    - if item.timeout_at
      .muted.pull-right.cursor-pointer
        %icon.glyphicon.glyphicon-hourglass{title: "Timeout at #{format_time item.timeout_at}"}
    .p= format_time item.started_at
    - if item.done? and item.finished_at.present?
      .p= "Spend #{(item.finished_at - item.started_at).round(2) }s"
  %td
    = execution_status(item)
  %td
    - if item.token.present?
      = link_to "Token", "#token-#{item.id}", class: "toggle-popup"
      .hide
        .popup{id: "token-#{item.id}"}
          %pre= item.token
    - else
      %span.muted Token
    \/
    - if item.result.present?
      = link_to "Result", "#result-#{item.id}", class: "toggle-popup"
      .hide
        .popup{id: "result-#{item.id}"}
          %pre= item.result
    - else
      %span.muted Result
    \/
    - if item.log.present?
      = link_to "Log", "#log-#{item.id}", class: "toggle-popup"
      .hide
        .popup{id: "log-#{item.id}"}
          %pre= item.log
    - else
      %span.muted Log
  
  %td
    .btn-group.pull-right{:role => "group"}
      %button.btn.btn-default.btn-xs.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :type => "button"}
        %span.caret
      %ul.dropdown-menu
        %li= link_to "Perform", [:op, item, type: :perform], method: :post, data: {confirm: "Are you sure to perform this?"}
        %li= link_to "Close", [:op, item, type: :close], method: :post, data: {confirm: "Are you sure to close this?"}
        %li.divider{:role => "separator"}
        %li= link_to "Delete", item, method: :delete, data: {confirm: "Are you sure to delete this?"}
