%tr
  %td= link_to "##{item.id}", item
  %td
    .p= link_to item.plan.title, item.plan
    - if item.routine
      .text-muted= Scheduler::Schedule.description(item.routine.config)
  %td= format_time item.scheduled_at
  %td
    - if item.timeout_at
      .text-muted.float-end.cursor-pointer
        %icon.glyphicon.glyphicon-hourglass{title: "Timeout at #{format_time item.timeout_at}"}
    .p= format_time item.started_at
    - if item.done? and item.finished_at.present?
      .p= "Spend #{(item.finished_at - item.started_at).round(2) }s"
  %td
    = execution_status(item)
  %td
    - if item.token.present?
      %button.btn.btn-link.ps-0.btn-sm{type: :button, data: {bs: {content: item.token, toggle: :popover, placement: :bottom}}} Token

    - else
      %span.text-muted No Token
    \/
    - if item.result.present?
      = render "shared/dialog_data", id: "item-result-#{item.id}", name: :Result, data: JSON.pretty_generate(item.result_data)
    - else
      %span.text-muted No Result
    \/
    - if item.log.present?
      = render "shared/dialog_data", id: "item-log-#{item.id}", name: :Log, data: item.log
    - else
      %span.text-muted No Log

  %td
    .btn-group.btn-group-sm.float-end{role: "group"}
      %button.btn.btn-light.btn-sm.dropdown-toggle{type: :button, data: {bs: {toggle: :dropdown}}}

      %ul.dropdown-menu
        %li= link_to "Perform", [:op, item, type: :perform], class: "dropdown-item", data: {turbo_method: :post, turbo_confirm: "Are you sure to perform this?"}
        %li= link_to "Close", [:op, item, type: :close], class: "dropdown-item", data: {turbo_method: :post, turbo_confirm: "Are you sure to close this?"}
        %li
          %hr.dropdown-divider
        %li= link_to "Delete", item, class: "dropdown-item", data: {turbo_method: :delete, turbo_confirm: "Are you sure to delete this?"}
